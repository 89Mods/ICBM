println "blah"
buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'forge'
apply plugin: 'maven-publish'

ext.buildProps = file "build.properties"

buildProps.withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

minecraft {
    version = "${config.version.minecraft}-${config.version.forge}"
	
	replaceIn "ICBM.java"
	replace "@MAJOR@", config.version.mod.major
	replace "@MINOR@", config.version.mod.minor
	replace "@REVIS@", config.version.mod.revis
	if (System.getenv("BUILD_NUMBER") != null) {
		replace "@BUILD@", System.getenv("BUILD_NUMBER")
	}
	else {
		replace "@BUILD@", 1
	}
}

task makePretty(type: Delete) {
  delete 'output'
}

if (project.getProperty("bambooshortPlanName") == "ICBM-Dev"){
    group = "dev.BuiltBrokenModding.icbm"
    archivesBaseName = "ICBM-dev"
} else {
    group = "com.BuiltBrokenModding.icbm"
    archivesBaseName = "ICBM"
}

clean{
   dependsOn makePretty
}

def ENV = System.getenv()

version = "${config.version.minecraft}-${config.version.mod.major}.${config.version.mod.minor}.${config.version.mod.revis}b"
group = "icbm"
archivesBaseName = "ICBM"

if (project.hasProperty("bambooBuildNumber"))
    version += project.bambooBuildNumber
else
    version += "NIGHTLY"
    
println "version = "+ version

if (System.getenv("BUILD_NUMBER") != null)
    version += ".${System.getenv("BUILD_NUMBER")}"


processResources {
	from 'build.properties'
}

task apiZip(type: Zip) {
    classifier = 'api'
    from sourceSets*.allSource
    include 'icbm/api/**'
    destinationDir = file 'output'
}

artifacts {
    archives apiZip
}

task copyBuildXml(type: Copy) {
    from 'build.properties'
    into 'output'
}

jar {
    dependsOn copyBuildXml
    classifier = ''
    destinationDir = file 'output'
}

processResources {
	from(sourceSets.main.resources.srcDirs) {
		//include '**/*.lang'
		include '**/*.info'
		include '**/*.properties'

		expand 'version': project.version, 'mcversion': config.version.minecraft
		// replace version and MCVersion
	}

	// copy everything else, thats not text
	from(sourceSets.main.resources.srcDirs) {
		exclude '**/*.info'
		exclude '**/*.properties'
	}
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
    destinationDir = file 'output'
}

publishing {
    publications {
        mavenJava(MavenPublication)
        {
            artifact jar
            artifact deobfJar
            artifact("output/build.properties") {
                classifier "build"
                extension "properties"
            }
            from project.components.java
        }
    }

    repositories {
        maven {
            url "file:///var/www/html/maven"
        }
    }
}


repositories {
    maven {
        url 'http://calclavia.com/maven/'
    }
    maven {
        name "Mobius Repo"
        url "http://mobiusstrip.eu/maven"
    }
    maven {
        name 'CB Repo'
        url "http://chickenbones.net/maven/"
    }
    maven { 
        name 'OC Maven'
        url = "http://maven.cil.li/" }
}

dependencies 
{
    testCompile 'junit:junit:4.11'
    compile "mcp.mobius.waila:Waila:1.5.5_1.7.10"
    compile "li.cil.oc:OpenComputers:MC1.7.10-1.4.0.+:dev"
    runtime group: 'dev.calclavia.resonantengine', name: 'resonant-engine', version: "${config.version.resonantengine}", classifier: "dev"
}
